name: Build and publish

on: [push, pull_request]

jobs:
  build:
    name: "Java ${{ matrix.java }} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11]
    steps:
       - uses: actions/checkout@v2
       - name: Set up JDK
         uses: actions/setup-java@v1
         with:
           java-version: ${{ matrix.java }}
       - name: Cache Maven packages
         uses: actions/cache@v2
         with:
           path: ~/.m2
           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
           restore-keys: ${{ runner.os }}-m2
       - name: Run the Maven verify phase
         run: mvn -B install --file pom.xml
       - name: Extract project version
         run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
         id: get-version
       - name: Upload output zip file
         uses: actions/upload-artifact@v2
         with:
           name: idm_${{ matrix.java }}
           path: openidm-zip/target/wrenidm-${{ steps.get-version.outputs.version }}.zip
  publish:
    name: Publish image to dockerhub
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published' && github.head_ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11]
    steps:
      - uses: actions/checkout@v2
      - name: Extract project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: get-version
      - name: Download idm zip
        uses: actions/download-artifact@v2
        with:
          name: idm_${{ matrix.java }}
          path: openidm-zip/target/wrenidm-${{ steps.get-version.outputs.version }}.zip
      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: wrensecurity/wrenidm
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            JAVA_VERSION=${{ matrix.java }}
            WRENIDM_VERSION=${{ steps.get-version.outputs.version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}-java-${{ matrix.java }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
